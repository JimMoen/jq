name: Release

on:
  push:
    tags:
      - "*"
jobs:
  mac:
    strategy:
      fail-fast: false
      matrix:
        otp:
          - 24
          - 25
        os:
          - macos-11
          - macos-12
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Configure Homebrew cache
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew/
            ~/Library/Caches/Homebrew/downloads/
          key: brew-${{ matrix.os }}-${{ matrix.otp  }}

      - name: prepare
        run: |
          brew update
          brew install curl zip unzip gnu-sed automake bison
          brew install erlang@${{ matrix.otp }}
          echo "/usr/local/bin" >> $GITHUB_PATH
          git config --global credential.helper store

      - name: build release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export PATH="/usr/local/opt/bison/bin:$PATH"
          export PATH="/usr/local/opt/erlang@${{ matrix.otp }}/bin:$PATH"
          env BUILD_RELEASE=1 ./build.sh

      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: |
            _packages/*.tar.gz
            _packages/*.tar.gz.sha256

  linux:
    strategy:
      fail-fast: false
      matrix:
        builder:
          - 5.0-26
        otp:
          - 24.3.4.2-1
          - 25.1.2-2
        elixir:
          - 1.13.4
        arch:
          - amd64
          - arm64
        os:
          - ubuntu20.04
          - ubuntu18.04
          - ubuntu16.04
          - debian11
          - debian10
          - debian9
          - el7
          - el8
          - alpine3.15.1
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch }}

      - name: build release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE=ghcr.io/emqx/emqx-builder/${{ matrix.builder }}:${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.os }}
          docker run -i --rm --user 1001 -v $(pwd):/wd --workdir /wd --platform=linux/${{ matrix.arch }} -e BUILD_RELEASE=1 $IMAGE bash -euc './build.sh'

      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: |
            _packages/*.tar.gz
            _packages/*.tar.gz.sha256

  release:
    runs-on: ubuntu-latest
    needs:
      - mac
      - linux
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: packages
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Erlang jq NIF ${{ github.ref_name }} Released
          files: "packages/*"
          draft: false
          prerelease: false
